
  generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "rhel-openssl-3.0.x"]
  }
  
  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
        
model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String?
  username         String    @unique
  name             String?
  role             String    @default("buyer")
  isVerified       Boolean   @default(false)
  verificationToken String?
  otp              String?
  otpExpiry        DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  vendorProfile    VendorProfile?
  bookings         Booking[]
}

model VendorProfile {
  id               Int       @id @default(autoincrement())
  userId           Int       @unique
  profileDetails   String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  user             User      @relation(fields: [userId], references: [id])
  properties       Property[]
  experiences      Experience[]
}

model Property {
  id               Int       @id @default(autoincrement())
  title            String
  description      String
  location         String
  price            Float
  availability     Json
  images           Json
  vendorProfileId  Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  vendorProfile    VendorProfile @relation(fields: [vendorProfileId], references: [id])
  bookings         Booking[]
}

model Experience {
  id               Int       @id @default(autoincrement())
  title            String
  description      String
  location         String
  price            Float
  availability     Json
  images           Json
  vendorProfileId  Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  vendorProfile    VendorProfile @relation(fields: [vendorProfileId], references: [id])
  bookings         Booking[]
}

model Booking {
  id               Int       @id @default(autoincrement())
  userId           Int
  propertyId       Int?
  experienceId     Int?
  bookingDate      DateTime
  status           String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  user             User      @relation(fields: [userId], references: [id])
  property         Property? @relation(fields: [propertyId], references: [id])
  experience       Experience? @relation(fields: [experienceId], references: [id])
}